[
    {
        "Title": "GPUHammer: New RowHammer Attack Variant Degrades AI Models on NVIDIA GPUs",
        "Link": "https://thehackernews.com/2025/07/gpuhammer-new-rowhammer-attack-variant.html",
        "Summary": "NVIDIA is urging customers to enable System-level Error Correction Codes (ECC) as a defense against a variant of a RowHammer attack demonstrated against its graphics processing units (GPUs).\n\"Risk of successful exploitation from RowHammer attacks varies based on DRAM device, platform, design specification, and system settings,\" the GPU maker said in an advisory released this week.\nDubbed",
        "Date": "2025-07-12",
        "Content": "NVIDIA is urging customers to enable System-level Error Correction Codes (ECC) as a defense against a variant of a RowHammer attack demonstrated against its graphics processing units (GPUs).\n\"Risk of successful exploitation from RowHammer attacks varies based on DRAM device, platform, design specification, and system settings,\" the GPU maker\nsaid\nin an advisory released this week.\nDubbed\nGPUHammer\n, the attacks mark the first-ever RowHammer exploit demonstrated against NVIDIA's GPUs (e.g., NVIDIA A6000 GPU with GDDR6 Memory), causing malicious GPU users to tamper with other users' data by triggering bit flips in GPU memory.\nThe most concerning consequence of this behavior, University of Toronto researchers found, is the degradation of an artificial intelligence (AI) model's accuracy from 80% to less than 1%.\nRowHammer\nis to modern DRAMs just like how\nSpectre and Meltdown\nare to contemporary CPUs. While both are hardware-level security vulnerabilities, RowHammer targets the physical behavior of DRAM memory, whereas Spectre\nexploits\nspeculative execution in CPUs.\nRowHammer\ncauses\nbit flips in nearby memory cells due to electrical interference in DRAM stemming from repeated memory access, while\nSpectre and Meltdown\nallow attackers to\nobtain privileged information\nfrom memory via a side-channel attack, potentially leaking sensitive data.\nIn 2022, academics from the University of Michigan and Georgia Tech described a technique called\nSpecHammer\nthat combines RowHammer and Spectre to launch speculative attacks. The approach essentially entails triggering a Spectre v1 attack by using Rowhammer bit-flips to insert malicious values into victim gadgets.\nGPUHammer is the latest variant of RowHammer, but one that's capable of inducing bit flips in NVIDIA GPUs despite the presence of mitigations like target refresh rate (TRR).\nIn a proof-of-concept developed by the researchers, using a single-bit flip to tamper with a victim's ImageNet deep neural network (DNN) models can degrade model accuracy from 80% to 0.1%.\nExploits like GPUHammer threaten the integrity of AI models, which are increasingly reliant on GPUs to perform parallel processing and carry out computationally demanding tasks, not to mention open up a new attack surface for cloud platforms.\nTo mitigate the risk posed by GPUHammer, it's advised to enable ECC through \"nvidia-smi -e 1.\" Newer NVIDIA GPUs like H100 or RTX 5090 are not affected due to them featuring\non-die ECC\n, which helps\ndetect and correct errors\narising due to voltage fluctuations associated with smaller, denser memory chips.\n\"Enabling Error Correction Codes (ECC) can mitigate this risk, but ECC can introduce up to a 10% slowdown for [machine learning] inference workloads on an A6000 GPU,\" Chris (Shaopeng) Lin, Joyce Qu, and Gururaj Saileshwar, the lead authors of the study, said, adding it also reduces memory capacity by 6.25%.\nThe disclosure comes as researchers from NTT Social Informatics Laboratories and CentraleSupelec presented CrowHammer, a type of RowHammer attack that enables a key recovery attack against the\nFALCON\n(FIPS 206)\npost-quantum signature scheme\n, which has been\nselected\nby NIST for standardization.\n\"Using RowHammer, we target Falcon's RCDT [reverse cumulative distribution table] to trigger a very small number of targeted bit flips, and prove that the resulting distribution is sufficiently skewed to perform a key recovery attack,\" the study said.\n\"We show that a single targeted bit flip suffices to fully recover the signing key, given a few hundred million signatures, with more bit flips enabling key recovery with fewer signatures.\"\nFound this article interesting?  Follow us on\nTwitter\n\nand\nLinkedIn\nto read more exclusive content we post."
    },
    {
        "Title": "Over 600 Laravel Apps Exposed to Remote Code Execution Due to Leaked APP_KEYs on GitHub",
        "Link": "https://thehackernews.com/2025/07/over-600-laravel-apps-exposed-to-remote.html",
        "Summary": "Cybersecurity researchers have discovered a serious security issue that allows leaked Laravel APP_KEYs to be weaponized to gain remote code execution capabilities on hundreds of applications.\n\"Laravel's APP_KEY, essential for encrypting sensitive data, is often leaked publicly (e.g., on GitHub),\" GitGuardian said. \"If attackers get access to this key, they can exploit a deserialization flaw to",
        "Date": "2025-07-12",
        "Content": "Cybersecurity researchers have discovered a serious security issue that allows leaked Laravel APP_KEYs to be weaponized to gain remote code execution capabilities on hundreds of applications.\n\"Laravel's APP_KEY, essential for encrypting sensitive data, is often leaked publicly (e.g., on GitHub),\" GitGuardian\nsaid\n. \"If attackers get access to this key, they can exploit a deserialization flaw to execute arbitrary code on the server – putting data and infrastructure at risk.\"\nThe company, in\ncollaboration\nwith Synacktiv, said it was able to extract more than 260,000 APP_KEYs from GitHub from 2018 to May 30, 2025, identifying over 600 vulnerable Laravel applications in the process. GitGuardian said it observed over 10,000 unique APP_KEYs across GitHub, of which 400 APP_KEYs were validated as functional.\nAPP_KEY\nis a random 32-byte encryption key that's generated during the installation of Laravel. Stored in the .env file of the application, it's used to encrypt and decrypt data, generate secure, random strings, sign and verify data, and create unique authentication tokens, making a crucial security component.\nGitGuardian noted that Laravel's current implementation of decrypt() function introduces a security issue wherein it automatically deserializes decrypted data, thereby opening the door for possible remote code execution.\n\"Specifically in Laravel applications, if attackers obtain the APP_KEY and can invoke the decrypt() function with a maliciously crafted payload, they can achieve remote code execution on the Laravel web server,\" security researcher Guillaume Valadon said.\n\"This vulnerability was first documented with\nCVE-2018-15133\n, which affected Laravel versions prior to 5.6.30. However, this attack vector persists in newer Laravel versions when developers explicitly configure session serialization in cookies using the SESSION_DRIVER=cookie setting, as demonstrated by\nCVE-2024-55556\n.\"\nIt's worth noting that CVE-2018-15133 has been\nexploited\nin the wild by threat actors associated with the AndroxGh0st malware, after scanning the internet for Laravel applications with misconfigured .env files.\nFurther analysis has found that 63% of APP_KEY exposures originate from .env files (or their variants) that typically contain other valuable secrets, such as cloud storage tokens, database credentials, and secrets associated with e-commerce platforms, customer support tools, and artificial intelligence (AI) services.\nMore importantly, approximately 28,000 APP_KEY and APP_URL pairs have been concurrently exposed on GitHub. Of these, approximately 10% have been found to be valid, rendering 120 applications vulnerable to trivial remote code execution attacks.\nGiven that the APP_URL configuration specifies the application's base URL, exposing both APP_URL and APP_KEY creates a potent attack vector that threat actors can leverage to directly access the app, retrieve session cookies, and attempt to decrypt them using the exposed key.\nSimply scrubbing secrets from repositories isn't enough—especially when they've already been cloned or cached by third-party tools. What developers need is a clear rotation path, backed by monitoring that flags every future reappearance of sensitive strings across CI logs, image builds, and container layers.\n\"Developers should never simply delete exposed APP_KEYs from repositories without proper rotation,\" GitGuardian said. \"The proper response involves: immediately rotating the compromised APP_KEY, updating all production systems with the new key, and implementing continuous secret monitoring to prevent future exposures.\"\nThese types of incidents also align with a broader class of PHP deserialization vulnerabilities, where tools like phpggc help attackers craft gadget chains that trigger unintended behaviors during object loading. When used in Laravel environments with leaked keys, such gadgets can achieve full RCE without needing to breach the app's logic or routes.\nThe disclosure comes after GitGuardian\nrevealed\nthat it discovered a \"staggering 100,000 valid secrets\" in Docker images publicly accessible on the DockerHub registry. This includes secrets associated with Amazon Web Services (AWS), Google Cloud, and GitHub tokens.\nA new Binarly analysis of over 80,000 unique Docker images spanning 54 organizations and 3,539 repositories has likewise uncovered 644 unique secrets that encompassed generic credentials, JSON Web Tokens, HTTP Basic Authorization header, Google Cloud API key, AWS access tokens, and CircleCI API tokens, among others.\n\"Secrets appear in a wide variety of file types, including source code, configuration files, and even large binary files, areas where many existing scanners fall short,\" the company\nsaid\n. \"Moreover, the presence of entire Git repositories inside container images represents a serious and often overlooked security risk.\"\nBut that's not all. The rapid adoption of Model Context Protocol (MCP) to enable agentic workflows in enterprise-driven AI applications has opened up\nbrand new attack vectors\n– a concerning one being the leakage of secrets from MCP servers published to GitHub repositories.\nSpecifically, GitGuardian found that 202 of them leaked at least one secret, accounting for 5.2% of all the repositories – a number that the company\nsaid\nis \"slightly higher than the 4.6% occurrence rate observed on all public repositories,\" making MCP servers a \"new source of secret leaks.\"\nWhile this research focuses on Laravel, the same root problem—unguarded secrets in public repositories—applies to other stacks. Organizations should explore centralized secret scanning, Laravel-specific hardening guides, and secure-by-design patterns for managing .env files and container secrets across frameworks.\nFound this article interesting?  Follow us on\nTwitter\n\nand\nLinkedIn\nto read more exclusive content we post."
    },
    {
        "Title": "Hackers are exploiting critical RCE flaw in Wing FTP Server",
        "Link": "https://www.bleepingcomputer.com/news/security/hackers-are-exploiting-critical-rce-flaw-in-wing-ftp-server/",
        "Summary": "Hackers have started to exploit a critical remote code execution vulnerability in Wing FTP Server just one day after technical details on the flaw became public. [...]",
        "Date": "2025-07-12",
        "Content": "Hackers have started to exploit a critical remote code execution vulnerability in Wing FTP Server just one day after technical details on the flaw became public.\nThe observed attack ran multiple enumeration and reconnaissance commands followed by establishing persistence by creating new users.\nThe exploited Wing FTP Server vulnerability is tracked as\nCVE-2025-47812\nand received the highest severity score. It is a combination of a null byte and Lua code injection that allows remote a unauthenticated attacker to execute code with the highest privileges on the system (root/SYSTEM).\nWing FTP Server is a powerful solution for managing secure file transfers that can execute Lua scripts, which is widely used in enterprise and SMB environments.\nOn June 30, security researcher Julien Ahrens published a\ntechnical write-up for CVE-2025-47812\n, explaining that the flaw stems from unsafe handling of null-terminated strings in C++ and improper input sanitization in Lua.\nThe researcher demonstrated how a null byte in the username field could bypass authentication checks and enable Lua code injection into session files.\nWhen those files are subsequently executed by the server, it is possible to achieve arbitrary code execution as root/SYSTEM.\nAlong with CVE-2025-47812, the researcher presented another three flaws in Wing FTP:\nCVE-2025-27889\n– allows exfiltrating user passwords via a crafted URL if the user submits a login form, due to unsafe inclusion of the password in a JavaScript variable (location)\nCVE-2025-47811\n– Wing FTP runs as root/SYSTEM by default, with no sandboxing or privilege drop, making RCEs far more dangerous\nCVE-2025-47813\n– supplying an overlong UID cookie reveals file system paths\nAll the flaws impact Wing FTP versions 7.4.3 and earlier. The vendor fixed the issues by releasing version 7.4.4 on May 14, 2025, except for CVE-2025-47811, which was deemed unimportant.\nThreat researchers at managed cybersecurity platform Huntress created a proof-of-concept exploit for CVE-2025-47812 and show in the video below how hackers could leverage it in attacks:\nHuntress researchers found that on July 1st, a day after technical details for CVE-2025-47812 appeared, at least one attacker exploited the vulnerability at one of their customers.\nThe attacker sent malformed login requests with null-byte-injected usernames, targeting ‘loginok.html.’ These inputs created malicious session .lua files that injected Lua code into the server.\nThe injected code was designed to hex-decode a payload and execute it via cmd.exe, using certutil to download malware from a remote location and execute it.\nHuntress\nsays\nthat the same Wing FTP instance was targeted by five distinct IP addresses within a short time frame, potentially indicating mass-scanning and exploitation attempts by several threat actors.\nThe commands observed in these attempts were for reconnaissance, obtaining persistence in the environment, and data exfiltration using the\ncURL\ntool and webhook endpoint.\nThe hacker failed the attack \"maybe due to their unfamiliarity with them, or because Microsoft Defender stopped part of their attack,\" Huntress says. Nevertheless, the researchers observed clear exploitation of the critical Wing FTP Server vulnerability.\nEven if Huntress observed failed attacks at their customers, hackers are likely to scan for reachable Wing FTP instances and try to take advantage of vulnerable servers.\nCompanies are strongly advised to upgrade to version 7.4.4 of the product as soon as possible.\nIf switching to a newer, secure version is not possible, the researchers' recommendation is to disable or restrict HTTP/HTTPs access to the Wing FTP web portal, disable anonymous logins, and monitor the session directory for suspicious additions.\n8 Common Threats in 2025\nWhile cloud attacks may be growing more sophisticated, attackers still succeed with surprisingly simple techniques.\nDrawing from Wiz's detections across thousands of organizations, this report reveals 8 key techniques used by cloud-fluent threat actors.\nGet the Report\nRelated Articles:\nHackers are exploiting critical flaw in vBulletin forum software\nFortinet fixes critical zero-day exploited in FortiVoice attacks\nSitecore CMS exploit chain starts with hardcoded 'b' password\nNew Veeam RCE flaw lets domain users hack backup servers\nTrend Micro fixes critical vulnerabilities in multiple products"
    },
    {
        "Title": "Grok-4 Falls to a Jailbreak Two days After Its Release",
        "Link": "https://www.securityweek.com/grok-4-falls-to-a-jailbreak-two-days-after-its-release/",
        "Summary": "<p>The latest release of the xAI LLM, Grok-4, has already fallen to a sophisticated jailbreak.</p>\n<p>The post <a href=\"https://www.securityweek.com/grok-4-falls-to-a-jailbreak-two-days-after-its-release/\">Grok-4 Falls to a Jailbreak Two days After Its Release</a> appeared first on <a href=\"https://www.securityweek.com\">SecurityWeek</a>.</p>",
        "Date": "2025-07-12",
        "Content": "Error fetching article: 403 Client Error: Forbidden for url: https://www.securityweek.com/grok-4-falls-to-a-jailbreak-two-days-after-its-release/"
    }
]